/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.chuks.report.processor.factory;

import com.chuks.report.processor.ChartProcessor;
import com.chuks.report.processor.handler.AreaChartInputHandler;
import com.chuks.report.processor.handler.BarChartInputHandler;
import com.chuks.report.processor.handler.PieChartInputHandler;
import com.chuks.report.processor.param.AreaChartInput;
import com.chuks.report.processor.param.BarChartInput;
import com.chuks.report.processor.param.PieChartInput;

/**
 *
 * @author Chuks Alimele<chuksalimele at yahoo.com>
 */
public class TestChartProc extends javax.swing.JFrame {

    /**
     * Creates new form TestChartProc
     */
    public TestChartProc() {
        initComponents();
        initChartProcessor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFXPanel1 = new javafx.embed.swing.JFXPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 456, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jFXPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestChartProc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TestChartProc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javafx.embed.swing.JFXPanel jFXPanel1;
    // End of variables declaration//GEN-END:variables

    private void initChartProcessor() {

        ChartProcessor c = ProcessorFactory.getChartProcessor();
        c.loadChart(new PieChartInputHandler() {

            @Override
            public void onShow(PieChartInput input) {
                /*input.plotNewSeries("series 1");
                input.plot("a", 1);
                input.plot("b", 2);
                input.plot("c", 3);
                
                input.plotNewSeries("series 2");
                input.plot("a", 1);
                input.plot("b", 2);
                input.plot("c", 3);

                input.setChartTitle("Test Chart");
                
                input.setLabelAxisX("The x axis");
                input.setLabelAxisY("The y axis");
                        */
                input.addPie("aaa", 10);
                input.addPie("bbb", 30);
                input.addPie("ccc", 60);
                input.addPie("ddd", 20);
                
                //input.setPollingEnabled(false);

                System.out.println("chuks coding");
            }
        }, jFXPanel1);
    }
}
